name: CI

on: [pull_request, workflow_dispatch]

jobs:
  phpstan:
    name: CI PHPStan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          extensions: mbstring, sockets

      - name: Get composer cache directory
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: |
          composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Run phpstan
        run: composer phpstan

  code-sniffer:
    name: CI Code sniffer
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          extensions: mbstring, sockets

      - name: Get composer cache directory
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install DEV dependencies
        run: |
          composer install --dev --no-progress --prefer-dist --optimize-autoloader

      - name: Install dependencies
        run: |
          composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Run phpcs
        run: composer phpcs --config-set ./vendor/brandembassy/coding-standard/src/BrandEmbassyCodingStandard

  phpunit:
    name: CI Tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-version: [ '7.4' ]
        composer-cmd: [ 'install', 'update --prefer-lowest' ]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: mbstring, sockets

      - name: Get composer cache directory
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: |
          composer ${{ matrix.composer-cmd }} --no-progress --prefer-dist --optimize-autoloader

      - name: Run phpunit
        run: composer phpunit
